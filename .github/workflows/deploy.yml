name: Website Portfolio Deployment

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Deploy target (netlify, gh-pages, all)'
        required: true
        default: 'all'
        type: choice
        options:
          - netlify
          - gh-pages
          - all

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Fix Promise.withResolvers polyfill
        run: node scripts/fix-promise-polyfill.js
        
      - name: Run linting
        run: npm run lint || echo "Linting completed with warnings"
      
      - name: Build for testing
        run: npm run build
      
      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            .next
            out
            node_modules/.cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
  
  deploy-to-netlify:
    needs: build
    if: github.event_name == 'push' || github.event.inputs.deploy_target == 'netlify' || github.event.inputs.deploy_target == 'all'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Restore cached build
        uses: actions/cache@v3
        with:
          path: |
            .next
            out
            node_modules/.cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
      
      - name: Fix Promise.withResolvers polyfill
        run: node scripts/fix-promise-polyfill.js
      
      - name: Prepare for Netlify
        run: npm run fix-netlify
        env:
          NETLIFY: 'true'
          DEPLOY_TARGET: 'netlify'
      
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: './out'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 10
  
  deploy-to-github-pages:
    needs: build
    if: github.event_name == 'push' || github.event.inputs.deploy_target == 'gh-pages' || github.event.inputs.deploy_target == 'all'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Restore cached build
        uses: actions/cache@v3
        with:
          path: |
            .next
            out
            node_modules/.cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
      
      - name: Fix Promise.withResolvers polyfill
        run: node scripts/fix-promise-polyfill.js
      
      - name: Build for GitHub Pages
        run: npm run export:gh-pages
        env:
          DEPLOY_TARGET: 'gh-pages'
      
      - name: Prepare for GitHub Pages
        run: npm run prepare-gh-pages
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: out
          branch: gh-pages
          clean: true
